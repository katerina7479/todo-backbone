{"name":"Todo-backbone","tagline":"Todo App with backbone","body":"Todo - Backbone.js\r\n======================\r\n\r\nWith Flask, SqlAlchemy, Semantic-UI, and Backbone.js\r\n----------------------------------------------------\r\n\r\nThis is a demo site showing another way to use Flask to make a website.\r\nThis time, Flask is a RESTful API, accepting and returning json.\r\nI used a SqlAlchemy non-declarative model, and simple sqlite test db.\r\nSemantic-UI for the front-end CSS.\r\nHTML rendered client-side with Backbone.js, underscore.js for templates,\r\nand require.js for async js loading.\r\n\r\nVagrant upload, you can start the website starts with:\r\n\r\n```\r\n > vagrant up\r\n ? (enter password at prompt)\r\n > vagrant ssh\r\n > cd projects/todoapp\r\n > python application.py\r\n```\r\n\r\n** Requires Virtualbox, Vagrant, & Git **\r\n\r\n\r\nReferences at:\r\n \r\n * [Flask](http://flask.pocoo.org/docs/)\r\n * [Sqlalchemy in Flask](http://flask.pocoo.org/docs/patterns/sqlalchemy/#manual-object-relational-mapping)\r\n * [Backbone.js](http://backbonejs.org/)\r\n * [Underscore.js](http://underscorejs.org/)\r\n * [Require.js](http://requirejs.org)\r\n * [Semantic-ui](http://semantic-ui.com/element.html)\r\n * [Vagrant](https://docs.vagrantup.com/v2/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}